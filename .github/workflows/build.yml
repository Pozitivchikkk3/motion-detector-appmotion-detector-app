name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y \
          python3-pip \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          cmake \
          libffi-dev \
          libssl-dev \
          git \
          zip \
          unzip \
          openjdk-17-jdk \
          expect

    - name: Install Python dependencies
      run: |
        pip install buildozer cython

    - name: Create buildozer.spec with specific settings
      run: |
        if [ -f buildozer.spec ]; then
          echo "Updating existing buildozer.spec"
          sed -i 's/^requirements = .*/requirements = python3,kivy,opencv,numpy,android/' buildozer.spec
          if ! grep -q "android.build_tools_version" buildozer.spec; then
            echo "android.build_tools_version = 30.0.3" >> buildozer.spec
          fi
          if ! grep -q "android.api" buildozer.spec; then
            echo "android.api = 30" >> buildozer.spec
          fi
          if ! grep -q "android.minapi" buildozer.spec; then
            echo "android.minapi = 21" >> buildozer.spec
          fi
          if ! grep -q "android.permissions" buildozer.spec; then
            echo "android.permissions = CAMERA,WRITE_EXTERNAL_STORAGE,READ_EXTERNAL_STORAGE" >> buildozer.spec
          fi
        else
          echo "Creating new buildozer.spec"
          buildozer init
          echo "requirements = python3,kivy,opencv,numpy,android" >> buildozer.spec
          echo "android.build_tools_version = 30.0.3" >> buildozer.spec
          echo "android.api = 30" >> buildozer.spec
          echo "android.minapi = 21" >> buildozer.spec
          echo "android.permissions = CAMERA,WRITE_EXTERNAL_STORAGE,READ_EXTERNAL_STORAGE" >> buildozer.spec
        fi

    - name: Pre-create Android SDK directory structure
      run: |
        mkdir -p ~/.android
        touch ~/.android/repositories.cfg
        mkdir -p ~/.buildozer/android/platform/android-sdk

    - name: Accept Android SDK licenses
      run: |
        export ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk
        echo "y" | buildozer android debug || true

    - name: Build with Buildozer using expect
      run: |
        cat > build_script.exp << 'EOF'
        #!/usr/bin/expect -f
        set timeout -1
        spawn buildozer -v android debug
        expect {
            -re "Accept\\? \\(y/N\\)" {
                send "y\r"
                exp_continue
            }
            -re "License.*:" {
                send "y\r"
                exp_continue
            }
            -re "Review licenses.*" {
                send "y\r"
                exp_continue
            }
            -re "Do you accept the license.*" {
                send "y\r"
                exp_continue
            }
            eof {
                catch wait result
                exit [lindex $result 3]
            }
        }
        EOF
        chmod +x build_script.exp
        ./build_script.exp

    - name: Alternative build method (if expect fails)
      if: failure()
      run: |
        echo "Trying alternative build method..."
        yes | buildozer android debug

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-apk
        path: bin/*.apk
      if: always()

    - name: Upload build logs
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          .buildozer/
          buildozer.spec
      if: failure()
