name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y \
          python3-pip \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          cmake \
          libffi-dev \
          libssl-dev \
          git \
          zip \
          unzip \
          openjdk-17-jdk

    - name: Install Python dependencies
      run: |
        pip install buildozer cython

    - name: Create buildozer.spec with specific settings
      run: |
        if [ -f buildozer.spec ]; then
          echo "Updating existing buildozer.spec"
          # Обновляем требования
          sed -i 's/^requirements = .*/requirements = python3,kivy,opencv,numpy,android/' buildozer.spec
          # Добавляем настройки Android
          if ! grep -q "android.build_tools_version" buildozer.spec; then
            echo "android.build_tools_version = 30.0.3" >> buildozer.spec
          fi
          if ! grep -q "android.api" buildozer.spec; then
            echo "android.api = 30" >> buildozer.spec
          fi
          if ! grep -q "android.minapi" buildozer.spec; then
            echo "android.minapi = 21" >> buildozer.spec
          fi
          if ! grep -q "android.permissions" buildozer.spec; then
            echo "android.permissions = CAMERA,WRITE_EXTERNAL_STORAGE,READ_EXTERNAL_STORAGE" >> buildozer.spec
          fi
        else
          echo "Creating new buildozer.spec"
          buildozer init
          echo "requirements = python3,kivy,opencv,numpy,android" >> buildozer.spec
          echo "android.build_tools_version = 30.0.3" >> buildozer.spec
          echo "android.api = 30" >> buildozer.spec
          echo "android.minapi = 21" >> buildozer.spec
          echo "android.permissions = CAMERA,WRITE_EXTERNAL_STORAGE,READ_EXTERNAL_STORAGE" >> buildozer.spec
        fi

    - name: Setup Android SDK and accept licenses
      run: |
        mkdir -p ~/.android
        touch ~/.android/repositories.cfg
        
        # Создаем правильную структуру папок для Android SDK
        mkdir -p ~/.buildozer/android/platform/android-sdk/cmdline-tools/latest
        
        # Скачиваем и распаковываем Android Command Line Tools в правильную директорию
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -O /tmp/commandlinetools.zip
        unzip -q /tmp/commandlinetools.zip -d /tmp/
        mv /tmp/cmdline-tools/* ~/.buildozer/android/platform/android-sdk/cmdline-tools/latest/
        
        # Добавляем sdkmanager в PATH
        export PATH="$HOME/.buildozer/android/platform/android-sdk/cmdline-tools/latest/bin:$PATH"
        
        # Принимаем лицензии
        yes | sdkmanager --licenses --sdk_root=$HOME/.buildozer/android/platform/android-sdk
        
        # Устанавливаем необходимые компоненты
        sdkmanager "platform-tools" "build-tools;30.0.3" "platforms;android-30" --sdk_root=$HOME/.buildozer/android/platform/android-sdk

    - name: Build with Buildozer
      run: |
        # Устанавливаем переменную окружения для SDK root
        export ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk
        buildozer -v android debug

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-apk
        path: bin/*.apk
